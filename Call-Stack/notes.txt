1. What is the Call Stack?

      The call stack is a stack data structure used by the JVM to keep track of method calls.
      Whenever a method is invoked, a stack frame is created and pushed onto the stack.
      When the method finishes, its frame is popped off the stack.
2.Stack Frame

      Each stack frame contains:
      Method parameters
      Local variables
      Return address (where to continue after the method finishes)

3. Call Stack & Exceptions

      When an exception occurs, the JVM traces back the stack to find a method that handles it.
      This is called stack unwinding.
      If no handler is found, the program terminates.
Key Points to Remember (FAANG)

      Stack is LIFO → last method called is first to finish
      Stack frame stores parameters, local variables, return address
      Recursion heavily uses call stack → beware of StackOverflowError
      Exceptions trigger stack unwinding → trace shows exact flow
      Memory limited → deep recursion may cause stack overflow
