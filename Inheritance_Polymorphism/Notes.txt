What is Inheritance?

Definition: In OOP, inheritance is when one class acquires the properties and behaviors (fields and methods) of another class.
Purpose: Promotes code reuse and represents "is-a" relationships.

Parent Class :==>> The base class whose properties and methods are inherited by other classes.
                                      class Vehicle {
                                        void start() {
                                            System.out.println("Vehicle starts");
                                        }
                                    }  

Subclass / Child Class : ==>> The class that inherits from the parent class.
            Uses the extends keyword
                                      class Car extends Vehicle {
                                          void honk() {
                                              System.out.println("Car honks");
                                          }
                                      }


What is Polymorphism?

Definition: The ability of an object to take many forms â€” the same method name can behave differently based on the object calling it.

            Two Types:
                        Compile-time Polymorphism (Method Overloading)
                        Runtime Polymorphism (Method Overriding)

Method Overloading (Compile-time)                           ( trick is L -> Compile time)
         ==>   Same method name, different parameter list.


Method Overriding (Runtime)
        ==>>  Child class provides a specific implementation for a method that is already defined in its parent.                               ( trick is R -->Riding)

Achieved through inheritance.

The instanceof Operator   : ==>> Checks if an object is an instance of a specific class or subclass.


Heterogeneous Collections: ==>> A collection that stores objects of different types but usually shares a common parent.
