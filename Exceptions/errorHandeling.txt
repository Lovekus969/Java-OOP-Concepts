What is an Exception?

      An exception is an object that represents an error or an unexpected event.
      When it occurs, Java creates an object of a certain Exception class and “throws” it.
      If it’s not “caught” (handled), my program will stop.

Types of Exceptions in Java:=>
      Java exceptions can be grouped into three main categories:
  A. Checked Exceptions
            Checked at compile time.
            The compiler forces you to handle them using try-catch or throws.
            They represent recoverable problems.
Best example for the eroor called IOEception which says file not found or 404 



                  try {
                      FileReader file = new FileReader("data.txt");
                  } catch (IOException e) {
                      System.out.println("File not found: " + e.getMessage());
                  }
      B. Unchecked Exceptions (Runtime Exceptions)
                  Checked at runtime, not at compile time.
                  Usually due to programming mistakes.
                  We don’t need to declare them in throws or handle them.

                        Examples:

                              NullPointerException
                              ArrayIndexOutOfBoundsException
                              ArithmeticException  (Best example)
                                                                                                int[] arr = {1, 2, 3};
                                                                                                System.out.println(arr[5]); // ArrayIndexOutOfBoundsException
      C. Errors

      Not really exceptions; they represent serious problems that applications should not try to handle.Caused by JVM issues, like running out of memory.

                     Examples:
                              OutOfMemoryError
                              StackOverflowError
