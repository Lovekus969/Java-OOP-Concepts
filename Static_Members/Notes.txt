
Problems
● How can you create a constant?
● How can you declare data that is shared by all instances of a given class?
● How can you prevent a class from being subclassed?
● How can you prevent a method from being overridden?

What are Static Members?
Static variables (class variables): shared by all instances of a class.
Static methods: belong to the class, not objects. Can access only static variables directly.

How can you create a constant?
Use the final keyword to make a constant. Often combined with static if shared by all objects.

How can you declare data shared by all instances?
Simply use static keyword for variables:

How can you prevent a class from being subclassed?
Use final keyword on the class


How can you prevent a method from being overridden?
Use final keyword on the method

Lets see more about the keyword final 
  Final Class :==>>
    A class declared as final cannot be subclassed. Useful when you want to prevent inheritance.

                final class BMW {
                    void showBrand() {
                        System.out.println("BMW Brand");
                    }
                }


about final method 
Final Method :==>>
A method declared as final cannot be overridden in subclasses.

          class BMW {
              final void startEngine() {
                  System.out.println("Engine started!");
              }
          }
          
          class M4CS extends BMW {
              //  void startEngine() {} // Error: cannot override final method
          }
